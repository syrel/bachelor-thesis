! Text ModelIn order to display and edit text, an editor requires a text model that provides text modification and enumeration api. In a context of text editor under ==Text== we understand an object that contains a collection of characters with a set of attributes applied on those characters and a number of api methods to support text modification such as ==insert:== or ==delete:==.It is important to choose a right backend data structure for a text model. In Pharo there already exist two text models based on different data structures: one is ==Text== which is used by both Morphic and Rubric text editors, and ==TxModel== used by TxText editor. In the following sections we will compare and evaluate those text models regarding various properties such as ability to store, access and modify large pieces of text or whether they allow developers to embed non-textual object within text.!! ==Text== model of Morphic and Rubric text editors==Text== is a default Pharo text model. It stores a collection of characters and a set of attributes separately. Characters are represented with the help of ==ByteString== which is nothing else than an immutable array of characters. It means that every text modification such as insertion or deletion requires it to allocate and copy the whole characters array while replacing a subsequence of characters with a requested one. Thus, text modifications are in fact linear time algorithms, which is unacceptably slow when text size grows over hundreds of thousands of characters.