!Transcript

Due to its rich abilities, the moldable editor has the potential of changing all tools that rely on textual representations. One such a tool is the Transcript.
In a context Pharo the Transcript is a tool that allows users to log stream messages. Additionally Pharo provides a user interface to show those messages. It means that when it comes to logging tools we should destinguish an API used to output to a stream and a user interfae, which is one of the multiple ways to display  the output. Existing Transcript in Pharo has an ability to display logged messages in a simple text editor or to write them into a file.[[[expanded=true|show=gtLiveIn:Transcript open close; yourself]]]Many languages have an ability to output messages and their IDEs provide dedicated tools allowing user to browse and read the log. For example in JavaScript ==Console== is an object with an API that can be used to log objects. Most web browsers are shipped with developer tools and one of them is an interactive console. Mozilla Firefox provides ==Web Console == (https://developer.mozilla.org/en-US/docs/Tools/Web_Console) which is different from Goolge Chrome's ==Console== (https://developers.google.com/web/tools/chrome-devtools/console/)The goal of GT Transcript is to offer a rich and interactive interface for displaying live information coming from a system.  

!!The API

The API is backward compatible with the existing transcript. To enable the new features, we introduced a builder. For example, ==transcript nextPutAll: 'something'== becomes ==transcript next putAll: 'something'==. Between `next` and `putAll:`, we can add multiple attributes to the text output.

The following example shows the complete API.

[[[example=GtTranscriptExamples>>#completeAPI|expanded=true|show=gtLiveIn:]]]

!!Logging an animation

To get an idea of how this tool could be useful, take a look at the following example. A Bloc animation is logged in a visual, domain centric way, providing insight far superior to plain text.

[[[example=GtTranscriptExamples>>#transcriptWitAnimation|expanded=true|show=gtLiveIn:]]]